/**
 * Sidebar.js - ุงูุดุฑูุท ุงูุฌุงูุจู ููุชููู
 * Navigation Sidebar Component
 * 
 * ูุฐุง ุงููููู ูุญุชูู ุนูู:
 * - ูุงุฆูุฉ ุงูุชููู ุงูุฑุฆูุณูุฉ (Main Navigation Menu)
 * - ุนูุงุตุฑ ูุฎุตุตุฉ ุญุณุจ ุฏูุฑ ุงููุณุชุฎุฏู (Role-based Menu Items)
 * - ุชูููุฒ ุงูุตูุญุฉ ุงููุดุทุฉ (Active Page Highlighting)
 * - ุฅููููุงุช ูุชุณููุงุช ุงูุตูุญุงุช (Page Icons and Labels)
 * 
 * ุงูุฃุฏูุงุฑ ุงููุฏุนููุฉ:
 * 1. employee: ููุธู ุนุงุฏู - ุงูุตูุญุงุช ุงูุฃุณุงุณูุฉ
 * 2. manager: ูุฏูุฑ - ุตูุญุงุช ุฅุถุงููุฉ ูุฅุฏุงุฑุฉ ุงููุฑูู
 * 3. admin/super-admin: ุฅุฏุงุฑุฉ - ุฌููุน ุงูุตูุญุงุช ูุงูุฅุนุฏุงุฏุงุช
 */

import React from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import './Sidebar.css';

/**
 * Sidebar Component - ุงููููู ุงูุฑุฆูุณู ููุดุฑูุท ุงูุฌุงูุจู
 * @param {string} userRole - ุฏูุฑ ุงููุณุชุฎุฏู ุงูุญุงูู (employee, manager, admin, super-admin)
 */
const Sidebar = ({ userRole = 'employee' }) => {
  const navigate = useNavigate(); // ููุชููู ุจูู ุงูุตูุญุงุช - For navigation
  const location = useLocation(); // ููุญุตูู ุนูู ุงูุตูุญุฉ ุงูุญุงููุฉ - For current page

  /**
   * getMenuItems - ูุธููุฉ ูุฅูุดุงุก ูุงุฆูุฉ ุงูุชููู ุญุณุจ ุงูุฏูุฑ
   * Function to generate navigation menu based on user role
   * @returns {Array} ูุงุฆูุฉ ุนูุงุตุฑ ุงููุงุฆูุฉ ูุน ุงููุณุงุฑุงุช ูุงูุฃููููุงุช
   */
  const getMenuItems = () => {
    /**
     * baseItems - ุงูุนูุงุตุฑ ุงูุฃุณุงุณูุฉ ุงููุชุงุญุฉ ูุฌููุน ุงููุณุชุฎุฏููู
     * Base menu items available to all users
     */
    const baseItems = [
      { 
        path: '/dashboard', 
        icon: '๐', 
        label: 'Dashboard' // ููุญุฉ ุงููุนูููุงุช - ุนุฑุถ ุงูุฅุญุตุงุฆูุงุช ูุงููุคุดุฑุงุช
      },
      { 
        path: '/profile', 
        icon: '๐ค', 
        label: 'Profile' // ุงูููู ุงูุดุฎุตู - ูุนูููุงุช ูุฅุนุฏุงุฏุงุช ุงููุณุชุฎุฏู
      },
      { 
        path: '/meetings', 
        icon: '๐', 
        label: 'Meetings' // ุงูุงุฌุชูุงุนุงุช - 10-10-10 meetings ูุฅุฏุฎุงูุงุช ุงูุฃุฏุงุก
      }
    ];

    /**
     * ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูุฏูุฑ - Manager role menu items
     * ูุญุตู ุนูู ุงูุนูุงุตุฑ ุงูุฃุณุงุณูุฉ + ุฅุฏุงุฑุฉ ุงููุฑูู
     */
    if (userRole === 'manager') {
      return [
        ...baseItems,
        { 
          path: '/team', 
          icon: '๐ฅ', 
          label: 'Team' // ุฅุฏุงุฑุฉ ุงููุฑูู - ุนุฑุถ ูุฅุฏุงุฑุฉ ุฃุนุถุงุก ุงููุฑูู
        },
        { 
          path: '/add-employee', 
          icon: 'โ', 
          label: 'Add Employee' // ุฅุถุงูุฉ ููุธู - ูููุฐุฌ ุฅุถุงูุฉ ููุธู ุฌุฏูุฏ
        }
      ];
    }

    /**
     * ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ุฅุฏุงุฑุฉ ุนููุง - Admin/Super-admin role menu items
     * ูุญุตู ุนูู ุฌููุน ุงูุนูุงุตุฑ + ุฅุฏุงุฑุฉ ุงููุธุงู
     */
    if (userRole === 'admin' || userRole === 'super-admin') {
      return [
        ...baseItems,
        { 
          path: '/team', 
          icon: '๐ฅ', 
          label: 'Team' // ุฅุฏุงุฑุฉ ุงููุฑูู - ุฅุฏุงุฑุฉ ุดุงููุฉ ูููุฑู
        },
        { 
          path: '/user-management', 
          icon: 'โ๏ธ', 
          label: 'User Management' // ุฅุฏุงุฑุฉ ุงููุณุชุฎุฏููู - ุนุฑุถ ูุชุนุฏูู ุฌููุน ุงููุณุชุฎุฏููู
        },
        { 
          path: '/add-employee', 
          icon: 'โ', 
          label: 'Add Employee' // ุฅุถุงูุฉ ููุธู - ุฅุถุงูุฉ ููุธููู ุฌุฏุฏ
        },
        { 
          path: '/settings', 
          icon: '๐ง', 
          label: 'Settings' // ุงูุฅุนุฏุงุฏุงุช - ุฅุนุฏุงุฏุงุช ุงููุธุงู ูุงูุญุณุงุจ
        }
      ];
    }

    // ุฅุฑุฌุงุน ุงูุนูุงุตุฑ ุงูุฃุณุงุณูุฉ ููููุธููู ุงูุนุงุฏููู
    return baseItems;
  };

  // ุงูุญุตูู ุนูู ูุงุฆูุฉ ุงูุนูุงุตุฑ ุงูููุงุณุจุฉ ูููุณุชุฎุฏู ุงูุญุงูู
  const menuItems = getMenuItems();

  return (
    <aside className="sidebar">
      {/* 
        ูุงุฆูุฉ ุงูุชููู ุงูุฑุฆูุณูุฉ - Main navigation menu
        ุชุญุชูู ุนูู ุฌููุน ุฑูุงุจุท ุงูุตูุญุงุช ุงููุชุงุญุฉ ูููุณุชุฎุฏู
      */}
      <nav className="sidebar-nav">
        {menuItems.map((item) => (
          <div
            key={item.path} // ููุชุงุญ ูุฑูุฏ ููู ุนูุตุฑ
            className={`nav-item ${location.pathname === item.path ? 'active' : ''}`} // ุชูููุฒ ุงูุตูุญุฉ ุงููุดุทุฉ
            onClick={() => navigate(item.path)} // ุงูุชููู ุนูุฏ ุงูููุฑ
          >
            {/* ุฃููููุฉ ุงูุตูุญุฉ - Page icon */}
            <span className="nav-icon">{item.icon}</span>
            
            {/* ุชุณููุฉ ุงูุตูุญุฉ - Page label */}
            <span className="nav-label">{item.label}</span>
          </div>
        ))}
      </nav>
    </aside>
  );
};

export default Sidebar;